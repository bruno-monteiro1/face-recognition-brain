{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport SignIn from './Components/SignIn/SignIn';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'fc9e252f5c33403fa7d461445f1a41b5'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = evt => {\n      this.setState({\n        input: evt.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.route === 'SignIn' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruno/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","SignIn","ImageLinkForm","FaceRecognition","Rank","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","evt","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAKA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAFH;AADC;AADY,CAAzB;;AAaA,MAAMR,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BmB,EAAAA,WAAW,GAAE;AACX;;AADW,SAWfC,qBAXe,GAWUC,IAAD,IAAU;AAC9B,YAAMC,YAAY,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;AAELK,QAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;AAGLK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHvC;AAILS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;AAJ1C,OAAP;AAMH,KAtBc;;AAAA,SAwBfS,cAxBe,GAwBGC,GAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AAACD,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACH,KA1Bc;;AAAA,SA4BfE,aA5Be,GA4BEC,GAAD,IAAS;AACrB,WAAKF,QAAL,CAAc;AAACG,QAAAA,KAAK,EAAED,GAAG,CAACE,MAAJ,CAAWhC;AAAnB,OAAd;AACH,KA9Bc;;AAAA,SAgCfiC,cAhCe,GAgCE,MAAM;AACnB,WAAKL,QAAL,CAAc;AAACM,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWJ;AAAtB,OAAd;AACArC,MAAAA,GAAG,CAAC0C,MAAJ,CACCC,OADD,CAEE5C,QAAQ,CAAC6C,iBAFX,EAGE,KAAKH,KAAL,CAAWJ,KAHb,EAICQ,IAJD,CAIMC,QAAQ,IAAI,KAAKd,cAAL,CAAoB,KAAKrB,qBAAL,CAA2BmC,QAA3B,CAApB,CAJlB,EAKCC,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH,KAxCc;;AAAA,SA0CfG,aA1Ce,GA0CEC,KAAD,IAAW;AACzB,WAAKlB,QAAL,CAAc;AAACkB,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KA5Cc;;AAEX,SAAKX,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXP,MAAAA,GAAG,EAAE,EAHM;AAIXmB,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOD;;AAqCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,MAAM,EAAElD,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAE,KAAKgD,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGI,KAAKV,KAAL,CAAWW,KAAX,KAAqB,QAArB,GACA,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAE,KAAKD,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAEF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,EAGF,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAE,KAAKhB,aAAnC;AACA,MAAA,cAAc,EAAE,KAAKI,cADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,EAMF,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWR,GAAjC;AAAsC,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWD,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CALJ,CADF;AAiBD;;AAjEyB;;AAoE5B,eAAevC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation'\nimport Logo from './Components/Logo/Logo'\nimport SignIn from './Components/SignIn/SignIn'\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition'\nimport Rank from './Components/Rank/Rank'\nimport Clarifai from 'clarifai'\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'fc9e252f5c33403fa7d461445f1a41b5'\n});\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn'\n\n    }\n  }\n\ncalculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n\ndisplayFaceBox = (box) => {\n    this.setState({box: box});\n}\n\nonInputChange = (evt) => {\n    this.setState({input: evt.target.value})\n}\n\nonButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err))\n}\n\nonRouteChange = (route) => {\n  this.setState({route: route});\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'SignIn' \n        ? <SignIn onRouteChange={this.onRouteChange}/>\n        : <div> {/*como este return tem varios itens, eh necessario agrupar em uma div*/}\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} \n        onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n        </div>\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/Desktop/face-recognition-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'fc9e252f5c33403fa7d461445f1a41b5'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = userdata => {\n      this.setState({\n        user: {\n          id: userdata.id,\n          name: userdata.name,\n          email: userdata.email,\n          entries: userdata.entries,\n          joined: userdata.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = evt => {\n      this.setState({\n        input: evt.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        console.log(response);\n      }).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'SignIn') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box; //destructuring\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" \", React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onPictureSubmit: this.onPictureSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })) : route === 'SignIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruno/Desktop/face-recognition-brain/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","SignIn","Register","ImageLinkForm","FaceRecognition","Rank","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","userdata","setState","user","id","name","email","entries","joined","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","evt","input","target","onPictureSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","console","log","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation'\nimport Logo from './Components/Logo/Logo'\nimport SignIn from './Components/SignIn/SignIn'\nimport Register from './Components/Register/Register'\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition'\nimport Rank from './Components/Rank/Rank'\nimport Clarifai from 'clarifai'\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'fc9e252f5c33403fa7d461445f1a41b5'\n});\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n\n    }\n  }\n\nloadUser = (userdata) => {\n    this.setState({user: {\n      id: userdata.id,\n      name: userdata.name,\n      email: userdata.email,\n      entries: userdata.entries,\n      joined: userdata.joined\n    }})\n}\n\ncalculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n\ndisplayFaceBox = (box) => {\n    this.setState({box: box});\n}\n\nonInputChange = (evt) => {\n    this.setState({input: evt.target.value})\n}\n\nonPictureSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      console.log(response);\n    })\n    .then(response => {\n      if (response) {\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      })\n    .then(response => response.json())\n    .then(count => {\n      this.setState(Object.assign(this.state.user, { entries: count }))\n    })\n\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n  if (route === 'SignIn'){\n    this.setState({isSignedIn: false})\n  } else if (route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state; //destructuring\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n        ? <div> {/*como este return tem varios itens, eh necessario agrupar em uma div*/}\n        <Logo />\n        <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n        <ImageLinkForm onInputChange={this.onInputChange} \n        onPictureSubmit={this.onPictureSubmit}\n        />\n        <FaceRecognition box={box} imageUrl={imageUrl}/>\n        </div>\n        : ( route === 'SignIn' \n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}